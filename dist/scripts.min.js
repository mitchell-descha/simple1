var pokemonRepository = function () {
    let pokemonList = [];
  
    function addPokemon(pokemon) {
      if (typeof pokemon === "object") {
        pokemonList.push(pokemon);
      }
    }
  
    function getAll() {
      return pokemonList;
    }
  
    let loadingSpinner = document.createElement("div");
    loadingSpinner.classList.add("spinner-border", "text-light");
    document.querySelector("ul").appendChild(loadingSpinner);
  
    var searchItem = () => {
      let searchInput = document.querySelector("#input").value.toLowerCase();
      document.querySelectorAll(".list-group-item").forEach(item => {
        let listItemButton = item.querySelector(".btn-secondary").innerText.toLowerCase();
        item.style.display = listItemButton.includes(searchInput) ? "inline-block" : "none";
      });
    };
  
    function hideLoadingSpinner() {
      document.querySelector("ul").firstChild.remove();
    }
  
    function showModal(pokemonName, pokemonHeight, pokemonImage, pokemonWeight) {
      document.querySelector(".modal-title").innerText = pokemonName.toUpperCase();
      let height = document.querySelector(".pokemonHeight");
      let imgDetails = document.querySelector(".PokomoneImg");
      document.querySelector(".pokemonWeight").innerText = "Weight: " + pokemonWeight + "KG";
      height.innerText = "Height: " + pokemonHeight + "M";
      imgDetails.src = pokemonImage;
    }
  
    document.querySelector("#input").addEventListener("input", () => searchItem());
  
    window.addEventListener("keydown", e => {
      let modalContainer = document.querySelector("#exampleModal");
      if (e.key === "Escape" && modalContainer.classList.contains("isVisible")) {
        hideModal();
      }
    });
  
    document.querySelector(".logo").addEventListener("click", () => {
      window.location.reload();
    });
  
    let modalContainer = document.querySelector("#exampleModal");
    function hideModal() {
      document.querySelector("#exampleModal").classList.remove("isVisible");
    }
  
    return {
      addPokemon: addPokemon,
      addListItem: function (pokemon) {
        let pokemonListElement = document.querySelector(".list-group");
        let pokemonListItem = document.createElement("li");
        let btn = document.createElement("button");
        pokemonListItem.classList.add("list-group-item", "text-center", "border-0");
        btn.setAttribute("data-toggle", "modal");
        btn.setAttribute("data-target", "#exampleModal");
        btn.classList.add("btn-secondary", "mt-1", "p-2", "border-0", "fs-5");
        btn.addEventListener("click", function () {
          (function (pokemon) {
            loadDetails(pokemon)
              .then(() => {
                showModal(pokemon.name, pokemon.height, pokemon.imageUrl, pokemon.weight);
              })
              .catch(() => {});
          })(pokemon);
        });
        btn.innerText = pokemon.name;
        pokemonListItem.appendChild(btn);
        pokemonListElement.appendChild(pokemonListItem);
      },
      getAll: getAll,
      loadList: function () {
        return fetch("https://pokeapi.co/api/v2/pokemon/?limit=150")
          .then(response => response.json())
          .then(data => {
            hideLoadingSpinner();
            data.results.forEach(item => {
              addPokemon({
                name: item.name,
                detailsUrl: item.url,
                height: item.height,
                weight: item.weight,
              });
            });
          })
          .catch(error => {
            hideLoadingSpinner();
            console.error(error);
          });
      },
      loadDetails: function (pokemon) {
        return fetch(pokemon.detailsUrl)
          .then(response => response.json())
          .then(details => {
            pokemon.imageUrl = details.sprites.front_default;
            pokemon.height = details.height;
            pokemon.weight = details.weight;
          })
          .catch(error => {
            console.error(error);
          });
      },
      showModal: showModal,
      hideModal: hideModal,
    };
  }();
  
  pokemonRepository.loadList().then(() => {
    pokemonRepository.getAll().forEach(pokemon => {
      pokemonRepository.addListItem(pokemon);
    });
  });